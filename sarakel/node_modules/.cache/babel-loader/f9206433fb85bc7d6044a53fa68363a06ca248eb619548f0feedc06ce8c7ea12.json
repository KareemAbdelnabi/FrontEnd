{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Khaled\\\\Documents\\\\GitHub\\\\FrontEnd\\\\sarakel\\\\src\\\\Settings\\\\DragAndDrop\\\\DragAndDrop.js\";\nimport React from 'react';\nimport classes from './DragAndDrop.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DragAndDrop() {\n  const dropArea = document.querySelector(\".drag-area\"),\n    dragText = dropArea.querySelector(\"header\"),\n    button = dropArea.querySelector(\"button\"),\n    input = dropArea.querySelector(\"input\");\n  let file; //this is a global variable and we'll use it inside multiple functions\n  var fileobj;\n  button.onclick = () => {\n    input.click(); //if user click on the button then the input also clicked\n    file_browse();\n  };\n  input.addEventListener(\"change\", function () {\n    //getting user select file and [0] this means if user select multiple files then we'll select only the first one\n    file = this.files[0];\n    dropArea.classList.add(\"active\");\n    showFile(); //calling function\n  });\n\n  //If user Drag File Over DropArea\n  dropArea.addEventListener(\"dragover\", event => {\n    event.preventDefault(); //preventing from default behaviour\n    dropArea.classList.add(\"active\");\n    dragText.textContent = \"Release to Upload File\";\n  });\n\n  //If user leave dragged File from DropArea\n  dropArea.addEventListener(\"dragleave\", () => {\n    dropArea.classList.remove(\"active\");\n    dragText.textContent = \"Drag & Drop to Upload File\";\n  });\n\n  //If user drop File on DropArea\n  dropArea.addEventListener(\"drop\", event => {\n    event.preventDefault(); //preventing from default behaviour\n    //getting user select file and [0] this means if user select multiple files then we'll select only the first one\n    file = event.dataTransfer.files[0];\n    showFile(); //calling function\n  });\n  function showFile() {\n    let fileType = file.type; //getting selected file type\n    let validExtensions = [\"image/jpeg\", \"image/jpg\", \"image/png\"]; //adding some valid image extensions in array\n    if (validExtensions.includes(fileType)) {\n      //if user selected file is an image file\n      let fileReader = new FileReader(); //creating new FileReader object\n      fileReader.onload = () => {\n        let fileURL = fileReader.result; //passing user file source in fileURL variable\n        let imgTag = `<img src=\"${fileURL}\" alt=\"\">`; //creating an img tag and passing user selected file source inside src attribute\n        dropArea.innerHTML = imgTag; //adding that created img tag inside dropArea container\n      };\n      fileReader.readAsDataURL(file);\n    } else {\n      alert(\"This is not an Image File!\");\n      dropArea.classList.remove(\"active\");\n      dragText.textContent = \"Drag & Drop to Upload File\";\n    }\n  }\n  function upload_file(e) {\n    e.preventDefault();\n    fileobj = e.dataTransfer.files[0];\n    js_file_upload(fileobj);\n  }\n  function file_browse() {\n    document.getElementById('file').onchange = function () {\n      fileobj = document.getElementById('file').files[0];\n      js_file_upload(fileobj);\n    };\n  }\n  function js_file_upload(file_obj) {\n    if (file_obj != undefined) {\n      var form_data = new FormData();\n      form_data.append('file', file_obj);\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"POST\", \"upload.php\", true);\n      xhttp.onload = function (event) {\n        if (xhttp.status == 200) {\n          console.log(\"Uploaded!\");\n        } else {\n          alert(xhttp.status);\n        }\n      };\n      xhttp.send(form_data);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"drag-area\",\n    ondrop: \"upload_file(event)\",\n    ondragover: \"return false\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"icon\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fas fa-cloud-upload-alt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Drag & Drop to Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"OR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Browse File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      id: \"file\",\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_c = DragAndDrop;\nvar _c;\n$RefreshReg$(_c, \"DragAndDrop\");","map":{"version":3,"names":["React","classes","jsxDEV","_jsxDEV","DragAndDrop","dropArea","document","querySelector","dragText","button","input","file","fileobj","onclick","click","file_browse","addEventListener","files","classList","add","showFile","event","preventDefault","textContent","remove","dataTransfer","fileType","type","validExtensions","includes","fileReader","FileReader","onload","fileURL","result","imgTag","innerHTML","readAsDataURL","alert","upload_file","e","js_file_upload","getElementById","onchange","file_obj","undefined","form_data","FormData","append","xhttp","XMLHttpRequest","open","status","console","log","send","class","ondrop","ondragover","children","fileName","_jsxFileName","lineNumber","columnNumber","name","id","hidden","_c","$RefreshReg$"],"sources":["C:/Users/Khaled/Documents/GitHub/FrontEnd/sarakel/src/Settings/DragAndDrop/DragAndDrop.js"],"sourcesContent":["import React from 'react';\r\nimport classes from './DragAndDrop.module.css'\r\nexport default function DragAndDrop(){\r\n    \r\nconst dropArea = document.querySelector(\".drag-area\"),\r\ndragText = dropArea.querySelector(\"header\"),\r\nbutton = dropArea.querySelector(\"button\"),\r\ninput = dropArea.querySelector(\"input\");\r\nlet file; //this is a global variable and we'll use it inside multiple functions\r\nvar fileobj;\r\n\r\n\r\nbutton.onclick = ()=>{\r\n  input.click(); //if user click on the button then the input also clicked\r\n  file_browse();\r\n}\r\n\r\ninput.addEventListener(\"change\", function(){\r\n  //getting user select file and [0] this means if user select multiple files then we'll select only the first one\r\n  file = this.files[0];\r\n  dropArea.classList.add(\"active\");\r\n  showFile(); //calling function\r\n});\r\n\r\n\r\n//If user Drag File Over DropArea\r\ndropArea.addEventListener(\"dragover\", (event)=>{\r\n  event.preventDefault(); //preventing from default behaviour\r\n  dropArea.classList.add(\"active\");\r\n  dragText.textContent = \"Release to Upload File\";\r\n});\r\n\r\n//If user leave dragged File from DropArea\r\ndropArea.addEventListener(\"dragleave\", ()=>{\r\n  dropArea.classList.remove(\"active\");\r\n  dragText.textContent = \"Drag & Drop to Upload File\";\r\n});\r\n\r\n//If user drop File on DropArea\r\ndropArea.addEventListener(\"drop\", (event)=>{\r\n  event.preventDefault(); //preventing from default behaviour\r\n  //getting user select file and [0] this means if user select multiple files then we'll select only the first one\r\n  file = event.dataTransfer.files[0];\r\n  showFile(); //calling function\r\n});\r\n\r\nfunction showFile(){\r\n  let fileType = file.type; //getting selected file type\r\n  let validExtensions = [\"image/jpeg\", \"image/jpg\", \"image/png\"]; //adding some valid image extensions in array\r\n  if(validExtensions.includes(fileType)){ //if user selected file is an image file\r\n    let fileReader = new FileReader(); //creating new FileReader object\r\n    fileReader.onload = ()=>{\r\n      let fileURL = fileReader.result; //passing user file source in fileURL variable\r\n      let imgTag = `<img src=\"${fileURL}\" alt=\"\">`; //creating an img tag and passing user selected file source inside src attribute\r\n      dropArea.innerHTML = imgTag; //adding that created img tag inside dropArea container\r\n    }\r\n    fileReader.readAsDataURL(file);\r\n  }else{\r\n    alert(\"This is not an Image File!\");\r\n    dropArea.classList.remove(\"active\");\r\n    dragText.textContent = \"Drag & Drop to Upload File\";\r\n  }\r\n}\r\n\r\n\r\nfunction upload_file(e) {\r\n    e.preventDefault();\r\n    fileobj = e.dataTransfer.files[0];\r\n    js_file_upload(fileobj);\r\n}\r\n\r\nfunction file_browse() {\r\n  document.getElementById('file').onchange = function() {\r\n      fileobj = document.getElementById('file').files[0];\r\n      js_file_upload(fileobj);\r\n  };\r\n}\r\n\r\n\r\nfunction js_file_upload(file_obj) {\r\n    if(file_obj != undefined) {\r\n        var form_data = new FormData();                  \r\n        form_data.append('file', file_obj);\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.open(\"POST\", \"upload.php\", true);\r\n        xhttp.onload = function(event) {\r\n           \r\n            if (xhttp.status == 200) {\r\n                console.log(\"Uploaded!\");\r\n            } else {\r\n               alert(xhttp.status);\r\n            }\r\n        }\r\n \r\n        xhttp.send(form_data);\r\n    }\r\n}\r\n    return(\r\n    <div class=\"drag-area\" ondrop=\"upload_file(event)\" ondragover=\"return false\">\r\n        <div class=\"icon\"><i class=\"fas fa-cloud-upload-alt\"></i></div>\r\n        <header>Drag & Drop to Upload File</header>\r\n        <span>OR</span>\r\n        <button>Browse File</button>\r\n        <input type=\"file\" name=\"file\" id=\"file\" hidden />\r\n  </div>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC9C,eAAe,SAASC,WAAWA,CAAA,EAAE;EAErC,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;IACrDC,QAAQ,GAAGH,QAAQ,CAACE,aAAa,CAAC,QAAQ,CAAC;IAC3CE,MAAM,GAAGJ,QAAQ,CAACE,aAAa,CAAC,QAAQ,CAAC;IACzCG,KAAK,GAAGL,QAAQ,CAACE,aAAa,CAAC,OAAO,CAAC;EACvC,IAAII,IAAI,CAAC,CAAC;EACV,IAAIC,OAAO;EAGXH,MAAM,CAACI,OAAO,GAAG,MAAI;IACnBH,KAAK,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;IACfC,WAAW,CAAC,CAAC;EACf,CAAC;EAEDL,KAAK,CAACM,gBAAgB,CAAC,QAAQ,EAAE,YAAU;IACzC;IACAL,IAAI,GAAG,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC;IACpBZ,QAAQ,CAACa,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;IAChCC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC;;EAGF;EACAf,QAAQ,CAACW,gBAAgB,CAAC,UAAU,EAAGK,KAAK,IAAG;IAC7CA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACxBjB,QAAQ,CAACa,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;IAChCX,QAAQ,CAACe,WAAW,GAAG,wBAAwB;EACjD,CAAC,CAAC;;EAEF;EACAlB,QAAQ,CAACW,gBAAgB,CAAC,WAAW,EAAE,MAAI;IACzCX,QAAQ,CAACa,SAAS,CAACM,MAAM,CAAC,QAAQ,CAAC;IACnChB,QAAQ,CAACe,WAAW,GAAG,4BAA4B;EACrD,CAAC,CAAC;;EAEF;EACAlB,QAAQ,CAACW,gBAAgB,CAAC,MAAM,EAAGK,KAAK,IAAG;IACzCA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACxB;IACAX,IAAI,GAAGU,KAAK,CAACI,YAAY,CAACR,KAAK,CAAC,CAAC,CAAC;IAClCG,QAAQ,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC;EAEF,SAASA,QAAQA,CAAA,EAAE;IACjB,IAAIM,QAAQ,GAAGf,IAAI,CAACgB,IAAI,CAAC,CAAC;IAC1B,IAAIC,eAAe,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;IAChE,IAAGA,eAAe,CAACC,QAAQ,CAACH,QAAQ,CAAC,EAAC;MAAE;MACtC,IAAII,UAAU,GAAG,IAAIC,UAAU,CAAC,CAAC,CAAC,CAAC;MACnCD,UAAU,CAACE,MAAM,GAAG,MAAI;QACtB,IAAIC,OAAO,GAAGH,UAAU,CAACI,MAAM,CAAC,CAAC;QACjC,IAAIC,MAAM,GAAI,aAAYF,OAAQ,WAAU,CAAC,CAAC;QAC9C5B,QAAQ,CAAC+B,SAAS,GAAGD,MAAM,CAAC,CAAC;MAC/B,CAAC;MACDL,UAAU,CAACO,aAAa,CAAC1B,IAAI,CAAC;IAChC,CAAC,MAAI;MACH2B,KAAK,CAAC,4BAA4B,CAAC;MACnCjC,QAAQ,CAACa,SAAS,CAACM,MAAM,CAAC,QAAQ,CAAC;MACnChB,QAAQ,CAACe,WAAW,GAAG,4BAA4B;IACrD;EACF;EAGA,SAASgB,WAAWA,CAACC,CAAC,EAAE;IACpBA,CAAC,CAAClB,cAAc,CAAC,CAAC;IAClBV,OAAO,GAAG4B,CAAC,CAACf,YAAY,CAACR,KAAK,CAAC,CAAC,CAAC;IACjCwB,cAAc,CAAC7B,OAAO,CAAC;EAC3B;EAEA,SAASG,WAAWA,CAAA,EAAG;IACrBT,QAAQ,CAACoC,cAAc,CAAC,MAAM,CAAC,CAACC,QAAQ,GAAG,YAAW;MAClD/B,OAAO,GAAGN,QAAQ,CAACoC,cAAc,CAAC,MAAM,CAAC,CAACzB,KAAK,CAAC,CAAC,CAAC;MAClDwB,cAAc,CAAC7B,OAAO,CAAC;IAC3B,CAAC;EACH;EAGA,SAAS6B,cAAcA,CAACG,QAAQ,EAAE;IAC9B,IAAGA,QAAQ,IAAIC,SAAS,EAAE;MACtB,IAAIC,SAAS,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC9BD,SAAS,CAACE,MAAM,CAAC,MAAM,EAAEJ,QAAQ,CAAC;MAClC,IAAIK,KAAK,GAAG,IAAIC,cAAc,CAAC,CAAC;MAChCD,KAAK,CAACE,IAAI,CAAC,MAAM,EAAE,YAAY,EAAE,IAAI,CAAC;MACtCF,KAAK,CAACjB,MAAM,GAAG,UAASX,KAAK,EAAE;QAE3B,IAAI4B,KAAK,CAACG,MAAM,IAAI,GAAG,EAAE;UACrBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QAC5B,CAAC,MAAM;UACJhB,KAAK,CAACW,KAAK,CAACG,MAAM,CAAC;QACtB;MACJ,CAAC;MAEDH,KAAK,CAACM,IAAI,CAACT,SAAS,CAAC;IACzB;EACJ;EACI,oBACA3C,OAAA;IAAKqD,KAAK,EAAC,WAAW;IAACC,MAAM,EAAC,oBAAoB;IAACC,UAAU,EAAC,cAAc;IAAAC,QAAA,gBACxExD,OAAA;MAAKqD,KAAK,EAAC,MAAM;MAAAG,QAAA,eAACxD,OAAA;QAAGqD,KAAK,EAAC;MAAyB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/D5D,OAAA;MAAAwD,QAAA,EAAQ;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3C5D,OAAA;MAAAwD,QAAA,EAAM;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACf5D,OAAA;MAAAwD,QAAA,EAAQ;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5B5D,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACqC,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,MAAM;MAACC,MAAM;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAER;AAACI,EAAA,GAxGuB/D,WAAW;AAAA,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}